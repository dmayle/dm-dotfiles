#!/bin/bash -
# This wrapper exists to ensure that we use MacVim's built-in vim when running
# on the Mac. This is because the native vim doesn't support ruby extensions,
# which I'm using via plugins.

if [ -x ~/Applications/MacVim.app/Contents/MacOS/Vim ]; then
  # MacVim doesn't include a view (read-only) symlink, so we have to modify the
  # arguments based on the called application. A perfect invocation would
  # search the supplied arguments and make sure not to duplicate the -R, but
  # vim doesn't care if you double-specify read-only mode.
  if [[ "$0" =~ view ]]; then
    exec ~/Applications/MacVim.app/Contents/MacOS/Vim -R "$@";
  else
    exec ~/Applications/MacVim.app/Contents/MacOS/Vim "$@";
  fi
else
  # This isn't mac, or we don't have MacVim installed (why!?), so we want this
  # script to behave as if it hadn't been called. In this case, we remove
  # ourselves from the PATH variable (just for this command), and try to call
  # the correct executable from the leftover PATH. We have to strip the
  # directory name from the executable (with basename) because bash adds it
  # when you execute the file via the PATH.
  PATH=`echo $PATH | sed -E 's/(^|:)[^:]*dm-dotfiles[^:]*(:|$)/:/g'` exec `basename $0` "$@";
fi
